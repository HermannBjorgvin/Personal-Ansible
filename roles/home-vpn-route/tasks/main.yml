- name: Prompt user to create a VPN route
  pause:
    prompt: "Do you want to create a VPN route to {{ route_ip }}? [y/N]"
  register: vpn_route_answer

- name: Pause to ensure VPN network interface exists
  pause:
    prompt: "Make sure the VPN network interface: {{ interface_name }} exists and then press enter"
  when: vpn_route_answer.user_input | lower == 'y'

- name: Ensure VPN connection never uses default route
  become: yes
  shell: |
    current=$(nmcli -g ipv4.never-default connection show "{{ interface_name }}")
    if [ "$current" != "yes" ]; then
      nmcli connection modify "{{ interface_name }}" ipv4.never-default yes
    else
      echo "Already set"
    fi
  register: never_default
  changed_when: "'Already set' not in never_default.stdout"
  when: vpn_route_answer.user_input | lower == 'y'

- name: Ensure VPN connection is set to autoconnect
  become: yes
  shell: |
    current=$(nmcli -g connection.autoconnect connection show "{{ interface_name }}")
    if [ "$current" != "yes" ]; then
      nmcli connection modify "{{ interface_name }}" connection.autoconnect yes
    else
      echo "Already set"
    fi
  register: autoconnect
  changed_when: "'Already set' not in autoconnect.stdout"
  when: vpn_route_answer.user_input | lower == 'y'

- name: Bring up VPN connection immediately if not active
  become: yes
  shell: |
    if ! nmcli connection show --active | grep -q "{{ interface_name }}"; then
      nmcli connection up id "{{ interface_name }}"
    else
      echo "Already up"
    fi
  register: vpn_up
  changed_when: "'Already up' not in vpn_up.stdout"
  ignore_errors: yes
  when: vpn_route_answer.user_input | lower == 'y'

- name: Deploy VPN route dispatcher script
  template:
    src: dispatcher-script.j2
    dest: "/etc/NetworkManager/dispatcher.d/99-{{ interface_name | lower }}-vpn-route"
    mode: "0755"
  become: yes
  when: vpn_route_answer.user_input | lower == 'y'

- name: Update /etc/hosts to map "ssh.earth" to {{ route_ip }}
  become: yes
  lineinfile:
    path: /etc/hosts
    regexp: '.*\bssh\.earth\b.*'
    line: "{{ route_ip }} ssh.earth"
    state: present
  when: vpn_route_answer.user_input | lower == 'y'
